# .travis.yml 文件

# 聲明構建語言環境
sudo: required
language: android
jdk: oraclejdk8
dist: trusty
# 配置信息
android:

  components:
    - tools
    - build-tools-30.0.2
    - android-30
    - android-22
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - sys-img-armeabi-v7a-android-22
script:
  # 生成 APK
  # - ./gradlew assembleRelease
  - ./gradlew assembleDebug
  - ./gradlew clean build
  - ./gradlew test
  - ./gradlew build check

before_install:
  - chmod +x gradlew
  - yes | sdkmanager "platforms;android-30"

before_script:
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

before_deploy:
  # - ls app/build/outputs/apk/release/
  - ls app/build/outputs/apk/debug/

# 為構建添加暫存
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

# 為構建添加暫存
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

# 部署
deploy:
  # 部署到GitHub Release。
  # 除此之外，Travis CI還支持發佈到fir.im、AWS、Google App Engine等
  provider: releases
  api_key: ${AWDToken}
  # 部署文件路徑；對於Android就部署生成的 apk 文件
  # file: "app/build/outputs/apk/release/app-release-unsigned.apk"
  file: "app/build/outputs/apk/debug/app-debug.apk"
  # 避免 Travis CI在部署之前清空生成的APK文件
  skip_cleanup: true
  # 發佈時機
  on:
    # tags設置為true表示只有在有tag的情況下才部署
    tags: true